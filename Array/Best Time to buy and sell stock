class Solution {
    public int maxProfit(int[] prices) {
        //Brute force
        // int ans=0;
        // for(int i=0;i<prices.length-1;i++){
        //     for(int j=i+1;j<prices.length;j++){
        //          ans=Math.max(ans,prices[j]-prices[i]);
        //     }
        // }
        // return ans;

            
           //can get solved by using stack also



         //most optimal O(n) keep track of min from left 
         int min=Integer.MAX_VALUE;
         int ans=0;
         for(int i=0;i<prices.length;i++){
            min=Math.min(min,prices[i]);
            ans=Math.max(ans,prices[i]-min);
         }
           return ans;

    }
}
